/*!
  \file
  \brief Representation of the result of processing a work item
 */
#ifndef PROCESSOR_RESULT_HDR
#define PROCESSOR_RESULT_HDR

#include <iostream>

#include "../worker_exception.h"

namespace worker {
    namespace work_processor {

        /*!
          \brief Class to represent the result of running a work item.

          Objects of this class have the exit code, the standard output,
          and the standard error generated by running the work item as
          a Bash script.
         */
        class Result {
            public:
                /*!
                  \brief Result constructor.
                  \param exit_stats int representing the exit status
                         of the process.
                  \param stdout std::string& representing the standard
                         output of the process.
                  \param stderr std::string& representing the standard
                         error of the process.
                 */
                Result(const int exit_status, const std::string& stdout,
                        const std::string& stderr) :
                    _exit_status {exit_status}, _stdout {stdout},
                                 _stderr {stderr} {};

                /*!
                  \brief Result constructor.
                  \param result_string std::string containing a textual
                         representation of a result.
                 */
                Result(const std::string& result_string);

                /*!
                  \brief returns the exit status of the result.
                  \return integer representing the exit status of the
                          Bash script that was run.
                 */
                int exit_status() const { return _exit_status; };

                /*!
                  \brief returns the standard output of the result.
                  \return string contianing the starndard output generated
                          by the Bash script that was run.
                 */
                std::string stdout() const { return _stdout; };

                /*!
                  \brief returns the standard error of the result.
                  \return string contianing the starndard error generated
                          by the Bash script that was run.
                 */
                std::string stderr() const { return _stderr; };

                /*!
                  \brief returns a string representation of the result.
                  \return string representation of the result.
                 */
                std::string to_string() const;
                /*!
                  \brief overloaded put-to operator writing a string
                         representation to an output stream.
                  \param out std::ostream& output stream reference to
                         write the string representation to.
                  \param result Result object to write.
                  \return output stream reference that has been written to.
                 */
                friend std::ostream& operator<<(std::ostream& out,
                        const Result& result);
            private:
                int _exit_status;
                std::string _stdout;
                std::string _stderr;
        };

        /*!
          \brief Exception to be thrown when parsing the string
                 representation of a result fails.
         */
        class result_parse_exception : public Worker_exception {
            public:
                /*!
                  \brief Exception constructor.
                  \param message std:string that specifies the specific
                         inforation about the condition that triggered
                         the exception.
                 */
                result_parse_exception(const char* message) :
                    Worker_exception(message) {};
        };

    }
}

#endif
