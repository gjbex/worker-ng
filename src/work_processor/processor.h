#ifndef PROCESSOR_HDR
#define PROCESSOR_HDR

#include <boost/process/detail/traits/wchar_t.hpp>
#include <boost/process/env.hpp>
#include "result.h"

namespace worker {
    namespace work_processor {
        
        /*!
          \brief executes the argument string as Bash script
          \param work_item std::string representing a Bash script to be
                 executed
          \return result object containing the exit status, the standard
                  output and error generated by executing the Bash scriot.
         */
        Result process_work(const std::string work_item);

        using Env = boost::process::environment;

        /*!
          \brief executes the argument string as Bash script using environment
          \param work_item std::string representing a Bash script to be
                 executed
          \param env boost::process::env environment variables to use
          \return result object containing the exit status, the standard
                  output and error generated by executing the Bash scriot.
         */
        Result process_work(const std::string work_item, Env& env);

    }
}

#endif
